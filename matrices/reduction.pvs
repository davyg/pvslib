reduction: THEORY
BEGIN 

  IMPORTING matrices
  IMPORTING matrix_props
  IMPORTING matrix_inv

  n: VAR nat
  M: Var Matrix
  v: Var Vector

  matrix2vect(PFM:Matrix | columns(PFM)=1): { v:Vector|length(v)>0 AND rows(PFM)=length(v) } =
    array2list[real](rows(PFM))(LAMBDA (p:nat): entry(PFM)(p,0))

  matrix2vect_eq: LEMMA FORALL (M:Matrix | columns(M)=1, N:Matrix | columns(N)=1 AND rows(M) = rows(N)) :
    matrix2vect(M)=matrix2vect(N) IMPLIES
    M=N

  mult_vec(M:Matrix, v:Vector | length(v) = rows(M)) : {x:Vector | length(x) = columns(M)} =
    matrix2vect(M * vect2matrix(v));
  
  *(M:Matrix,v:Vector | length(v) = rows(M)) : {x:Vector | length(x) = columns(M)} = mult_vec(M, v)
 
  mat_vec_sub : LEMMA FORALL (x, y:VectorN(n), M : SquareMatrix(n)):  M*(x-y) = M*x-M*y
  scal_mat_assoc : LEMMA FORALL (x : real, M, N : SquareMatrix(n)): (x * M) * N = x * (M * N)
  scal_mat_assoc2 : LEMMA FORALL (x : real, M, N : SquareMatrix(n)): M * (x * N) = x * (M * N)
  mat_scal_assoc : LEMMA FORALL (x, y : real, M : SquareMatrix(n)): x * (y * M) = (x * y) * M

  eigenvalue?(n)(M:SquareMatrix(n))(v:real): bool =
    EXISTS (x:VectorN(n)):
      (NOT x = zero(n)) IMPLIES (M - (v*Id(n)))*x = zero(n)

  eigenvector?(n)(M:SquareMatrix(n))(x:VectorN(n)): bool =
    EXISTS (v:real):
      (M - v*Id(n))*x = zero(n)

  chara(n)(M:SquareMatrix(n)) : [real -> real] = LAMBDA (X:real): det(M - X * Id(n))
  
  injection?(n)(M:SquareMatrix(n)) : bool = FORALL (x, y:VectorN(n)): M*x = M*y IMPLIES x = y
  
  surjection?(n)(M:SquareMatrix(n)) : bool = FORALL (y:VectorN(n)): EXISTS (x:VectorN(n)): M*x = y

  inv_bij : LEMMA FORALL  (M:SquareMatrix(n)) : invertible?(M) = (injection?(n)(M) AND surjection?(n)(M))

  inv_vec : LEMMA FORALL (M:SquareMatrix(n)) : (NOT invertible?(M)) = (EXISTS (x:VectorN(n)): (NOT x = zero(n)) IMPLIES M * x = zero(n))

  eigen_chara : LEMMA FORALL (M:SquareMatrix(n)) (v:real): eigenvalue?(n)(M)(v) = (chara(n)(M)(v) = 0)
 
END reduction
